---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";
import Navigation from "../components/Navigation.vue";
import Footer from "../components/Footer.astro";

const posts = (await getCollection("blog"))
  .filter((post) => !post.data.draft)
  .sort((b, a) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf());

const postsPerPage = 10;
const totalPages = Math.ceil(posts.length / postsPerPage);
const currentPagePosts = posts.slice(0, postsPerPage);
---

<Layout title="News - Logic Moon">
  <Navigation client:visible />
  <main class="min-h-screen bg-primary">
    <section class="main-sectio_">

      <div class="container mx-auto px-4 py-16 ">
        <h1 class="text-4xl md:text-6xl text-center mb-12 text-secondary-500">
          News
        </h1>

        <div
          class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto">
          {
            currentPagePosts.map((post) => (
              <article class="post-card bg-primary-800 overflow-hidden shadow-lg group cursor-pointer transition-colors duration-600 hover:bg-primary-400 focus:ring-2 focus:bg-secondary-200">
                <a
                  href={`/news/${post.slug}`}
                  class="block hover:no-underline focus:ring-2 focus:ring-seconadary-500 focus:border-2 focus:border-secondary-50"
                  aria-label={`Read more about ${post.data.title}`}>
                  {post.data.image && (
                    <div class="aspect-video overflow-hidden">
                      <img
                        src={post.data.image}
                        alt={post.data.title}
                        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                      />
                    </div>
                  )}
                  <div class="p-6">
                    <h2 class="text-xl font-semibold mb-3 text-secondary group-hover:text-secondary-300 transition-colors duration-200">
                      {post.data.title}
                    </h2>
                    <p class="text-grey-500 group-hover:text-secondary-500 text-sm mb-3 transition-colors duration-200">
                      {post.data.pubDate.toLocaleDateString("en-EN", {
                        year: "numeric",
                        month: "long",
                        day: "numeric",
                      })}
                    </p>
                    <p class="text-secondary group-hover:text-secondary-500 leading-relaxed transition-colors duration-200">
                      {post.data.description}
                    </p>
                  </div>
                </a>
              </article>
            ))
          }}
        </div>

        {
          totalPages > 1 && (
            <nav class="flex items-center justify-center gap-4 mt-16" aria-label="Pagination">
              <div class="flex gap-2">
                {Array.from({ length: totalPages }, (_, i) => i + 1).map(
                  (num) => (
                    <a
                      href={num === 1 ? "/news" : `/news/page/${num}`}
                      class={`w-10 h-10 flex items-center justify-center transition-colors duration-200 ${
                        num === 1
                          ? "bg-primary-500 text-white"
                          : "bg-secondary-150 text-secondary0 hover:bg-primary-100"
                      }`}
                      aria-label={`Go to page ${num}`}
                      aria-current={num === 1 ? "page" : undefined}>
                      {num}
                    </a>
                  )
                )}
              </div>

              {totalPages > 1 && (
                <a
                  href="/news/page/2"
                  class="bg-primary-500 hover:bg-primary-400 text-white px-6 py-2 transition-colors duration-200"
                  aria-label="Go to next page">
                  Nächste →
                </a>
              )}
            </nav>
          )
        }

        <p class="text-center text-grey-600 mt-8">
          Page 1 from {totalPages}
          (1-{Math.min(postsPerPage, posts.length)} of {posts.length})
        </p>
      </div>
    </section>
  </main>
  <Footer />
</Layout>

<style>
  .main-section {
    min-height: calc(100vh - 80px);
  }
</style>
